/*
	wcfClockRtn.h
	The implementation of properties and methods for the wcfClockRtn object.
	Generated by SudzC.com
*/
#import "wcfClockRtn.h"

#import "wcfArrayOfClockInItem.h"
@implementation wcfClockRtn
	@synthesize Clockls = _Clockls;
	@synthesize btnClockIn = _btnClockIn;
	@synthesize btnClockOut = _btnClockOut;

	- (id) init
	{
		if(self = [super init])
		{
			self.Clockls = [[[NSMutableArray alloc] init] autorelease];

		}
		return self;
	}

	+ (wcfClockRtn*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfClockRtn*)[[[wcfClockRtn alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Clockls = [[wcfArrayOfClockInItem newWithNode: [Soap getNode: node withName: @"Clockls"]] object];
			self.btnClockIn = [[Soap getNodeValue: node withName: @"btnClockIn"] boolValue];
			self.btnClockOut = [[Soap getNodeValue: node withName: @"btnClockOut"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ClockRtn"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Clockls != nil && self.Clockls.count > 0) {
			[s appendFormat: @"<Clockls>%@</Clockls>", [wcfArrayOfClockInItem serialize: self.Clockls]];
		} else {
			[s appendString: @"<Clockls/>"];
		}
		[s appendFormat: @"<btnClockIn>%@</btnClockIn>", (self.btnClockIn)?@"true":@"false"];
		[s appendFormat: @"<btnClockOut>%@</btnClockOut>", (self.btnClockOut)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfClockRtn class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Clockls != nil) { [self.Clockls release]; }
		[super dealloc];
	}

@end
