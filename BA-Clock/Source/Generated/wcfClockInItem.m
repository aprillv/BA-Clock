/*
	wcfClockInItem.h
	The implementation of properties and methods for the wcfClockInItem object.
	Generated by SudzC.com
*/
#import "wcfClockInItem.h"

@implementation wcfClockInItem
	@synthesize Idnumber = _Idnumber;
	@synthesize Time = _Time;
	@synthesize TimeIn = _TimeIn;
	@synthesize TimeOut = _TimeOut;
	@synthesize sDate = _sDate;

	- (id) init
	{
		if(self = [super init])
		{
			self.Idnumber = nil;
			self.Time = nil;
			self.TimeIn = nil;
			self.TimeOut = nil;
			self.sDate = nil;

		}
		return self;
	}

	+ (wcfClockInItem*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (wcfClockInItem*)[[[wcfClockInItem alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Idnumber = [Soap getNodeValue: node withName: @"Idnumber"];
			self.Time = [Soap getNodeValue: node withName: @"Time"];
			self.TimeIn = [Soap getNodeValue: node withName: @"TimeIn"];
			self.TimeOut = [Soap getNodeValue: node withName: @"TimeOut"];
			self.sDate = [Soap getNodeValue: node withName: @"sDate"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ClockInItem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Idnumber != nil) [s appendFormat: @"<Idnumber>%@</Idnumber>", [[self.Idnumber stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Time != nil) [s appendFormat: @"<Time>%@</Time>", [[self.Time stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TimeIn != nil) [s appendFormat: @"<TimeIn>%@</TimeIn>", [[self.TimeIn stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.TimeOut != nil) [s appendFormat: @"<TimeOut>%@</TimeOut>", [[self.TimeOut stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.sDate != nil) [s appendFormat: @"<sDate>%@</sDate>", [[self.sDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[wcfClockInItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Idnumber != nil) { [self.Idnumber release]; }
		if(self.Time != nil) { [self.Time release]; }
		if(self.TimeIn != nil) { [self.TimeIn release]; }
		if(self.TimeOut != nil) { [self.TimeOut release]; }
		if(self.sDate != nil) { [self.sDate release]; }
		[super dealloc];
	}

@end
